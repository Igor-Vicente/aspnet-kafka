version: "3.8"
services:
  producer: 
    container_name: kafka-producer-api
    build: 
      context: ../src/Kafka.Producer.Api
      dockerfile: ./Dockerfile
    restart: always
    environment:
      - ASPNETCORE_URLS=http://+:90
      - ASPNETCORE_ENVIRONMENT=Development
      - kafka__ProducerSettings__BootstrapServers=broker:29092
    ports:
      - "8090:90"
    networks:
      - kafka-network
    depends_on:
      broker:
        condition: service_healthy

  consumer: 
    container_name: kafka-consumer-api
    build: 
      context: ../src/Kafka.Consumer.Api
      dockerfile: ./Dockerfile
    restart: always
    environment:
      - ASPNETCORE_URLS=http://+:70
      - ASPNETCORE_ENVIRONMENT=Development
      - kafka__ConsumerSettings__BootstrapServers=broker:29092
    ports:
      - "8070:70"
    networks:
      - kafka-network
    depends_on:
      broker:
        condition: service_healthy

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeeper
    networks:
      - kafka-network
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  broker:
    image: confluentinc/cp-kafka:7.4.0
    container_name: broker
    networks:
      - kafka-network
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092"
      KAFKA_LISTENERS: "PLAINTEXT://broker:29092,PLAINTEXT_HOST://0.0.0.0:9092"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: ["CMD", "kafka-topics", "--list", "--bootstrap-server", "localhost:9092"]
      interval: 10s
      retries: 5
      start_period: 30s

  schema-registry:
    image: confluentinc/cp-schema-registry:7.4.0
    container_name: schema-registry
    networks:
      - kafka-network
    depends_on:
      - broker
    ports:
      - "8888:8888"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://broker:29092
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8888

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    networks:
      - kafka-network
    depends_on:
      - broker
      - schema-registry
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: broker:29092
      KAFKA_CLUSTERS_0_SCHEMAREGISTRY: http://schema-registry:8888

networks:
  kafka-network:
    driver: bridge
